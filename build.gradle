import org.eclipse.jgit.api.Git
import io.github.ladysnake.chenille.JGitWrapper
import java.util.Calendar

plugins {
	id 'io.github.ladysnake.chenille' version '0.7.0'
	id 'io.github.juuxel.loom-quiltflower' version '1.6.0'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

def firstCommit = new JGitWrapper(Git.open(rootDir)).getFirstCommit()
println(firstCommit)
println(firstCommit.commitTime)
def calendar = Calendar.getInstance()
println(calendar.get(Calendar.YEAR))
calendar.timeInMillis = firstCommit.commitTime.toLong() * 1000
println(calendar.get(Calendar.YEAR))

chenille {
	configurePublishing {
		withArtifactory()
		withGithubRelease()
	}
	configureTestmod {
		withDependencyConfiguration()
	}

	javaVersion = 17
	license = 'LGPL'
}

afterEvaluate {
	license {
		println(header)
		println(ext["year"])
		println(ext["projectDisplayName"])
		println(ext["projectOwners"])
	}
}

sourceSets {
	dummy
}

repositories {
	chenille.repositories {
		ladysnake()
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modApi fabricApi.module("fabric-gametest-api-v1", fabric_version)
	modLocalImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cca_version}")
	modLocalImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cca_version}")
	api 'junit:junit:4.13'
	testmodImplementation sourceSets.main.output
	annotationProcessor(sourceSets.dummy.output)
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
